inverter:
  connection: modbus                        # [Required] options: modbus, sungrow, http
  host: 192.168.1.5                       # [Required] IP Address of the Inverter or Dongle
  port: 502                               # [Optional] Default for modbus is 502, for http is 8082
  model: "SG250HX"                        # [Optional] This is autodetected on startup, only needed if detection issues or for testing
  #serial: "A2390800745"                      # [Optional] This is autodetected on startup, only needed if detection issues or for testing, used as a unique ID
  slave: 0x01                             # [Optional] Default is 0x01
  level: 3                                # [Optional] Set the amount of information to gather
  scan_interval: 30                       # [Optional] Default is 30
  # retries: 3                              # [Optional] Default is 3, how many times to retry if connection fails
  # timeout: 10                             # [Optional] Default is 10, how long to wait for a connection
                                            # See model list here: https://github.com/harrisjunaid/SunGrow#supported
  smart_meter: FALSE                       # [Optional] Default is False, Set to true if inverter supports reading grind / house consumption
  # use_local_time: False                   # [Optional] Default False, Uses Inventer time, if true it uses PC time when updating timestamps (e.g. PVOutput)
  log_console: DEBUG                       # [Optional] Default is WARNING, Options: DEBUG, INFO, WARNING, ERROR
  log_file: DEBUG                         # [Optional] Default is OFF, Options: OFF, DEBUG, INFO, WARNING, ERROR
                                            # 0 = Model and Solar Generation, 
                                            # 1 (default) = Useful data, all required for exports, 
                                            # 2 everything your Inverter supports, 
                                            # 3 Everything from every register 

# If you do not want to use a export, you can either remove the whole configuration block
# or set enabled: False
exports:
  # Print Registers to console, good for debugging / troubleshooting
  - name: console         
    enabled: True                          # [Optional] Default is False

  # Runs a simple Webserver showing Config and last read registers
  # Access at http://localhost:8081 or http://[serverip]:8081
  - name: webserver 
    enabled: True                           # [Optional] Default is False
    port: 8081                            # [Optional] Default is 8081

  # Output data to InfluxDB
  - name: influxdb
    enabled: False                          # [Optional] Default is False
    url: "http://localhost:8086"            # [Optional] Default URL is http://localhost:8086
    token: "xxx"                            # [Required] API Token OR Username:Password (for influxdb v1.8x comment it out and use username + password)
    # username:                             # [Optional] Username if not using token
    # password:                             # [Optional] Password if not using token
    org: "Default"                          # [Required] InfluxDB Organization (for influxdb v1.8x this will be ignored)
    bucket: "SunGrow"                     # [Required] InfluxDB Bucket (for influxdb v1.8x this is the database name)
    measurements:                           # [Required] Registers to publish to bucket
      - point: "power"
        register: daily_power_yields
      - point: "power"
        register: total_active_power
      - point: "power"
        register: load_power
      - point: "power"
        register: meter_power
      - point: "power"
        register: export_to_grid
      - point: "power"
        register: import_from_grid
      - point: "temp"
        register: internal_temperature

  # Read by mqtt.py -> def configure(self, config, inverter) -> self.mqtt_config = {...}
  - name: mqtt
    enabled: True
    host: 192.168.1.200
    port: 1883
    username: "mqtt-sungrow"
    password: "1122qqww"
    # client_id: "sungrow-0x01" # OR set by mqtt.py self.mqtt_config = {...}
    homeassistant: True
  # Read by publish(self, invereter) in mqtt.py
    ha_sensors:
      - name: "Timestamp"
        sensor_type: sensor
        register: timestamp
        icon: "mdi:clock-outline"

      - name: "Power State"
        sensor_type: binary_sensor
        register: run_state
        device_class: running
        payload_on: "ON"
        payload_off: "OFF"

      - name: "Temperature"
        sensor_type: sensor
        register: internal_temperature
        device_class: temperature
        state_class: measurement

      - name: "Daily Running Time"
        sensor_type: sensor
        register: daily_running_time
        device_class: duration
        state_class: measurement
        unit_of_measurement: "min"
        icon: "mdi:clock-outline"

      - name: "Daily Generation"
        sensor_type: sensor
        register: daily_power_yields
        device_class: energy
        state_class: total
        icon: "mdi:solar-power"

      - name: "Monthly Power Yields"
        sensor_type: sensor
        register: monthly_power_yields
        device_class: energy
        state_class: total_increasing
        icon: "mdi:solar-power"

      - name: "Total Running Time"
        sensor_type: sensor
        register: total_running_time
        device_class: duration
        state_class: measurement
        unit_of_measurement: "h"
        icon: "mdi:clock-outline"

      - name: "Total Power Yields"
        sensor_type: sensor
        register: total_power_yields
        dev_class: power
        state_class: total_increasing
        icon: "mdi:solar-power"

      - name: "MPPT 1 V"
        sensor_type: sensor
        register: mppt_1_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"       

      - name: "MPPT 1 I"
        sensor_type: sensor
        register: mppt_1_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 2 V"
        sensor_type: sensor
        register: mppt_2_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 2 I"
        sensor_type: sensor
        register: mppt_2_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 3 V"
        sensor_type: sensor
        register: mppt_3_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 3 I"
        sensor_type: sensor
        register: mppt_3_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 4 V"
        sensor_type: sensor
        register: mppt_4_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 4 I"
        sensor_type: sensor
        register: mppt_4_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 5 V"
        sensor_type: sensor
        register: mppt_5_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 5 I"
        sensor_type: sensor
        register: mppt_5_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 6 V"
        sensor_type: sensor
        register: mppt_6_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 6 I"
        sensor_type: sensor
        register: mppt_6_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 7 V"
        sensor_type: sensor
        register: mppt_7_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 7 I"
        sensor_type: sensor
        register: mppt_7_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 8 V"
        sensor_type: sensor
        register: mppt_8_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 8 I"
        sensor_type: sensor
        register: mppt_8_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 9 V"
        sensor_type: sensor
        register: mppt_9_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 9 I"
        sensor_type: sensor
        register: mppt_9_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"  

      - name: "MPPT 10 V"
        sensor_type: sensor
        register: mppt_10_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 10 I"
        sensor_type: sensor
        register: mppt_10_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 11 V"
        sensor_type: sensor
        register: mppt_11_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 11 I"
        sensor_type: sensor
        register: mppt_11_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "MPPT 12 V"
        sensor_type: sensor
        register: mppt_12_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "MPPT 12 I"
        sensor_type: sensor
        register: mppt_12_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 1 I"
        sensor_type: sensor
        register: string_1_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 2 I"
        sensor_type: sensor
        register: string_2_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 3 I"
        sensor_type: sensor
        register: string_3_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"
      
      - name: "String 4 I"
        sensor_type: sensor
        register: string_4_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 5 I"
        sensor_type: sensor
        register: string_5_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 6 I"
        sensor_type: sensor
        register: string_6_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 7 I"
        sensor_type: sensor
        register: string_7_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 8 I"
        sensor_type: sensor
        register: string_8_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 9 I"
        sensor_type: sensor
        register: string_9_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 10 I"
        sensor_type: sensor
        register: string_10_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 11 I"
        sensor_type: sensor
        register: string_11_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 12 I"
        sensor_type: sensor
        register: string_12_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 13 I"
        sensor_type: sensor
        register: string_13_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 14 I"
        sensor_type: sensor
        register: string_14_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 15 I" 
        sensor_type: sensor
        register: string_15_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 16 I"
        sensor_type: sensor
        register: string_16_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 17 I"
        sensor_type: sensor
        register: string_17_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 18 I"
        sensor_type: sensor
        register: string_18_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 19 I"
        sensor_type: sensor
        register: string_19_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 20 I"
        sensor_type: sensor
        register: string_20_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 21 I"
        sensor_type: sensor
        register: string_21_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 22 I"
        sensor_type: sensor
        register: string_22_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 23 I"
        sensor_type: sensor
        register: string_23_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"

      - name: "String 24 I"
        sensor_type: sensor
        register: string_24_current
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        icon: "mdi:current-dc"
    
      - name: "Total Apparent Power"
        sensor_type: sensor
        register: total_apparent_power
        device_class: apparent_power
        unit_of_measurement: "VA"
        state_class: measurement 
        icon: "mdi:power-plug"

      - name: "Total Reactive Power"
        sensor_type: sensor
        register: total_reactive_power
        device_class: reactive_power
        unit_of_measurement: "Var"
        state_class: measurement
        icon: "mdi:power-plug"

      - name: "Total Active Power"
        sensor_type: sensor
        register: total_active_power
        dev_class: power
        unit_of_measurement: "W"
        state_class: measurement
        icon: "mdi:solar-power"
      
      - name: "Total DC Power"
        sensor_type: sensor
        register: total_dc_power
        dev_class: power
        unit_of_measurement: "W"
        state_class: measurement
        icon: "mdi:solar-power"

      - name: "Power Factor"
        sensor_type: sensor
        register: power_factor
        device_class: power_factor
        state_class: measurement
        icon: "mdi:power-plug"

      - name: "Grid Frequency"
        sensor_type: sensor
        register: grid_frequency
        device_class: frequency
        unit_of_measurement: "Hz"
        state_class: measurement
        icon: "mdi:transmission-tower"

      - name: "Nominal Active Power"
        sensor_type: sensor
        register: nominal_active_power
        dev_class: power
        unit_of_measurement: "kW"
        state_class: measurement
        icon: "mdi:solar-power"

      - name: "Noninal Reactive Power"
        sensor_type: sensor
        register: nominal_reactive_power
        dev_class: reactive_power
        unit_of_measurement: "kVar"
        state_class: measurement
        icon: "mdi:solar-power"

      - name: "Active Power Regulation Setpoint"
        sensor_type: sensor
        register: active_power_regulation_setpoint
        dev_class: power
        unit_of_measurement: "W"
        state_class: measurement
        icon: "mdi:solar-power"

      - name: "Reactive Power Regulation Setpoint"
        sensor_type: sensor
        register: reactive_power_regulation_setpoint
        dev_class: reactive_power
        unit_of_measurement: "Var"
        state_class: measurement
        icon: "mdi:solar-power"

      - name: "Array Insulation Resistance"
        sensor_type: sensor
        register: array_insulation_resistance
        unit_of_measurement: "kΩ"  
        icon: "mdi:omega"  

      - name: "Negative Voltage To The Ground"
        sensor_type: sensor
        register: negative_voltage_to_the_ground
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"  

      - name: "Bus Voltage"
        sensor_type: sensor
        register: bus_voltage
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        icon: "mdi:flash"

      - name: "Power Limitation Switch"
        sensor_type: binary_sensor
        register: power_limitation_switch
        device_class: plug
        icon: "mdi:toggle-switch"
        payload_on: "Enabled"
        payload_off: "Disabled"

      - name: "Power Limitation Setting"
        sensor_type: sensor
        register: power_limitation_setting
        unit_of_measurement: "%"
        icon: "mdi:power-plug"

      - name: "Power Factor Setting"
        sensor_type: sensor
        register: power_factor_setting
        icon: "mdi:power-plug"

      - name: "Reactive Power Adjustment Mode"
        sensor_type: sensor
        register: reactive_power_adjustment_mode
        icon: "mdi:power-plug"

      - name: "Reactive Power Adjustment"
        sensor_type: sensor
        register: reactive_power_adjustment
        dev_class: reactive_power
        unit_of_measurement: "kVar"
        icon: "mdi:power-plug"

      - name: "Reactive Power Adjustment Setting"
        sensor_type: sensor
        register: reactive_power_adjustment_setting
        unit_of_measurement: "%"
        icon: "mdi:power-plug"

      - name: "Power Limitation Adjustment"
        sensor_type: sensor
        register: power_limitation_adjustment
        dev_class: power
        unit_of_measurement: "kW"
        icon: "mdi:power-plug"
      
      - name: "Alarm Code 1"
        sensor_type: sensor
        register: alarm_code_1
        icon: "mdi:alert-circle"

      - name: "PID Alarm Code"
        sensor_type: sensor
        register: pid_alarm_code
        icon: "mdi:alert-circle"

      - name: "Night SVG SWITCH"
        sensor_type: binary_sensor
        register: night_svg_switch
        device_class: plug
        icon: "mdi:toggle-switch"
        payload_on: "Enabled"
        payload_off: "Disabled"

      



#      - name: "Total Active Power"
#        sensor_type: sensor
#        register: total_active_power
#        dev_class: power
#        state_class: measurement
#        icon: "mdi:solar-power"
#      - name: "Daily Export to Grid"
#        sensor_type: sensor
#        register: daily_export_to_grid
#        device_class: energy
#        state_class: total_increasing
#        icon: "mdi:transmission-tower-export"
#        value_template: "{{ value_json.daily_export_to_grid | round(2) }}"
#      - name: "Daily Import from Grid"
#        sensor_type: sensor
#        register: daily_import_from_grid
#        device_class: energy
#        state_class: total_increasing
#        icon: "mdi:transmission-tower-import"
#        value_template: "{{ value_json.daily_import_from_grid | round(2) }}"
#      - name: "Active Export to Grid"
#        sensor_type: sensor
#        register: export_to_grid
#        dev_class: power
#        state_class: measurement
#        icon: "mdi:transmission-tower-export"
#      - name: "Active Import from Grid"
#        sensor_type: sensor
#        register: import_from_grid
#        dev_class: power
#        state_class: measurement
#        icon: "mdi:transmission-tower-import"


            

  # Publish Registers to PVOutput
  - name: pvoutput      
    enabled: False                          # [Optional] Default is False
    api: "xxxxx"                            # [Required] API Key, Settings > API Key
    sid: "xxxxx"                            # [Optional] System ID, Settings > Registered Systems > System ID
    # join_team: False                      # [Optional] Default True, This will join the SunGrow team in PVOutput, Setting to False will leave the team if previously joined
    rate_limit: 60                          # [Optional] Default 60, 60 for regular accounts, 300 for donation accounts
    cumulative_flag: 2                      # If using v2 & v4 set to 1, of using only v1 set to 2 (if daily totals)
    batch_points: 1                         # [Optional] Default 1, how many data points to batch upload, 
                                            # Time between uploads will be status_interval * batch_points. e.g. status_invterval of 5min, and batch_points of 12 will upload to PVOutput Hourly (5 * 12 = 60 mins)
    parameters:                             # [Required] v1 & v3 or v2 & v4 minimum. See: https://pvoutput.org/help/api_specification.html#power-and-energy-calculation
      - name: v1                            # Energy Generation
        register: daily_power_yields        # Solar Generated Today (Energy)
        multiple: 1000
      - name: v2                            # Power Generation
        register: total_active_power        # Current Generation (Power)
#     - name: v3                            # Energy Consumption
#       register: 
      - name: v4                            # Power Consumption
        register: load_power                # Current Home usage (Power)
#     - name: v5                            # Ambient temperature see: https://forum.pvoutput.org/t/what-temperature-is-used-to-calculate-insolation/2106
#       register: internal_temperature      # 
      - name: v6                            # Voltage
        register: phase_a_voltage           # Read voltage from first Phase
#     - name: "v7"                          # Extended Value v7 - Donation Only
#       register:
#     - name: "v8"                          # Extended Value v8 - Donation Only
#       register:
#     - name: "v9"                          # Extended Value v9 - Donation Only
#       register:
#     - name: "v10"                         # Extended Value v10 - Donation Only
#       register:
#     - name: "v11"                         # Extended Value v11 - Donation Only
#       register:
#     - name: "v12"                         # Extended Value v12 - Donation Only
#       register:
#     - name: "m1"                          # Text Message 1 - Donation Only
#       register:

#    group:
#      inverter_0x01:
#        name: "Inverter-0x01"
#        entities:
#          - sensor.0x01_daily_power_yields_{{ serial_number }}
#          - sensor.0x01_daily_export_to_grid_{{ serial_number }}
#          - sensor.0x01_daily_import_from_grid_{{ serial_number }}
#          - sensor.0x01_internal_temperature_{{ serial_number }}
#          - binary_sensor.0x01_run_state_{{ serial_number }}
#          - sensor.0x01_total_active_power_{{ serial_number }}
#          - sensor.0x01_export_to_grid_{{ serial_number }}
#          - sensor.0x01_import_from_grid_{{ serial_number }}